name: Format IP List

on:
  schedule:
    # 每天北京时间早上7点运行（UTC 23:00）
    - cron: '0 23 * * *'
  workflow_dispatch:  # 允许手动触发

jobs:
  format-ip:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Create format script
        run: |
          cat > format_ip.py << 'EOF'
          import requests
          from collections import defaultdict

          # 从指定 URL 获取 IP 列表
          url = "https://raw.githubusercontent.com/kgdpyeifk/cfipcaiji/refs/heads/main/ip.txt"
          try:
              response = requests.get(url)
              response.raise_for_status()
              ip_list = [line.strip() for line in response.text.splitlines() if line.strip()]
              print(f"获取到 {len(ip_list)} 个 IP: {ip_list[:5]}...")  # 调试输出前5个IP
          except requests.exceptions.RequestException as e:
              print(f"获取IP列表失败: {e}")
              exit(1)

          # 使用 ip-api.com 查询 IP 地理位置
          def get_country_info(ip):
              try:
                  api_url = f"http://ip-api.com/json/{ip}"
                  response = requests.get(api_url, timeout=5).json()
                  if response['status'] == 'success':
                      country = response['country']
                      country_code = response['countryCode'].upper()
                      flag_map = {
                          'HK': '🇭🇰', 'TW': '🇹🇼', 'US': '🇺🇸', 'JP': '🇯🇵', 'SG': '🇸🇬',
                          'KR': '🇰🇷', 'DE': '🇩🇪', 'GB': '🇬🇧', 'FR': '🇫🇷', 'CA': '🇨🇦',
                          'AU': '🇦🇺', 'IN': '🇮🇳', 'RU': '🇷🇺', 'CN': '🇨🇳'
                      }
                      flag = flag_map.get(country_code, '🏳️')
                      chinese_map = {
                          'HK': '香港', 'TW': '台湾', 'US': '美国', 'JP': '日本', 'SG': '新加坡',
                          'KR': '韩国', 'DE': '德国', 'GB': '英国', 'FR': '法国', 'CA': '加拿大',
                          'AU': '澳大利亚', 'IN': '印度', 'RU': '俄罗斯', 'CN': '中国'
                      }
                      chinese_name = chinese_map.get(country_code, f"未知({country_code})")
                      print(f"查询 {ip} 成功: {flag}{country_code}-{chinese_name}")  # 调试输出
                      return flag, country_code, chinese_name
              except Exception as e:
                  print(f"查询 {ip} 失败: {e}")
              return '🏳️', 'UNK', f"未知({ip})"

          # 处理 IP 列表并生成格式化输出
          country_ips = defaultdict(list)
          for ip in ip_list:
              ip_part = ip.split(':')[0] if ':' in ip else ip  # 支持纯 IP 或 IP:Port
              flag, country_code, chinese_name = get_country_info(ip_part)
              formatted_line = f"{ip}#{flag}{country_code}-{chinese_name}-备用"
              country_ips[country_code].append(formatted_line)
              print(f"处理 {ip} -> {formatted_line}")  # 调试输出

          # 限制每个国家前 10 条
          top10_lines = []
          for country_code in country_ips:
              top10_lines.extend(country_ips[country_code][:10])
          print(f"生成 {len(top10_lines)} 条记录")  # 调试输出

          # 保存到 top10.txt
          try:
              with open('top10.txt', 'w', encoding='utf-8') as f:
                  f.write('\n'.join(top10_lines) + '\n')
              print("top10.txt 已生成")
          except IOError as e:
              print(f"写入文件失败: {e}")
              exit(1)

          if not top10_lines:
              print("警告: top10_lines 为空，可能存在问题")
          EOF

      - name: Run format script
        run: python format_ip.py

      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add top10.txt
          
          # 检查是否有更改
          if git diff --cached --quiet; then
              echo "没有需要提交的更改"
              exit 0
          fi
          
          git commit -m "Update top10.txt with formatted IP list"
          git push
